"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePositiveInteger = exports.safeJSON = void 0;
exports.isEmptyObj = isEmptyObj;
exports.hasOwn = hasOwn;
exports.isObj = isObj;
const error_1 = require("../core/error");
// https://stackoverflow.com/a/34491287
function isEmptyObj(obj) {
    if (!obj) {
        return true;
    }
    for (const _k in obj) {
        return false;
    }
    return true;
}
// https://eslint.org/docs/latest/rules/no-prototype-builtins
function hasOwn(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function isObj(obj) {
    return obj !== null && typeof obj === 'object' && !Array.isArray(obj);
}
const safeJSON = (text) => {
    try {
        return JSON.parse(text);
    }
    catch (_err) {
        return undefined;
    }
};
exports.safeJSON = safeJSON;
const validatePositiveInteger = (name, n) => {
    if (typeof n !== 'number' || !Number.isInteger(n)) {
        throw new error_1.PayOSError(`${name} must be an integer`);
    }
    if (n < 0) {
        throw new error_1.PayOSError(`${name} must be a positive integer`);
    }
    return n;
};
exports.validatePositiveInteger = validatePositiveInteger;
