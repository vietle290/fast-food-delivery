import { PayOS } from '../client';
import { FinalRequestOptions, HeadersLike } from '../core/request-options';
type LogFn = (message: string, ...rest: unknown[]) => void;
export type Logger = {
    error: LogFn;
    warn: LogFn;
    info: LogFn;
    debug: LogFn;
};
export type LogLevel = 'off' | 'error' | 'warn' | 'info' | 'debug';
export declare function loggerFor(client: PayOS): Logger;
export declare const parseLogLevel: (maybeLevel: LogLevel | string | null | undefined, sourceName: string, client: PayOS) => LogLevel | undefined;
export declare const formatRequestDetail: <T = undefined>(config: {
    options?: FinalRequestOptions<T>;
    headers?: HeadersLike;
    url?: string | undefined;
    status?: number | undefined;
    method?: string | undefined;
    durationMs?: number | undefined;
    message?: unknown;
    body?: unknown;
    retryOf?: string | undefined;
}) => {
    options?: FinalRequestOptions<T>;
    headers?: HeadersLike;
    url?: string | undefined;
    status?: number | undefined;
    method?: string | undefined;
    durationMs?: number | undefined;
    message?: unknown;
    body?: unknown;
    retryOf?: string | undefined;
};
export {};
