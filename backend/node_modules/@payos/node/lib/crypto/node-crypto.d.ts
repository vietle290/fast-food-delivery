import { CryptoProvider, SignatureOptions } from './provider';
import { DataType } from '../core/api-response';
/**
 * Node.js crypto implementation using the built-in crypto module
 */
export declare class NodeCryptoProvider implements CryptoProvider {
    /**
     * Generates a SHA-256 HMAC signature from an object by:
     * - Sorting the object's keys
     * - Converting the sorted object to a query string
     * - Creating a HMAC signature using the provided key
     */
    createSignatureFromObj(data: object, key: string): Promise<string | null>;
    /**
     * Generates a SHA-256 HMAC signature for a payment request using specific fields:
     * - amount, cancelUrl, description, orderCode, returnUrl
     * - Concatenates these fields into a query string and signs it with the provided key
     */
    createSignatureOfPaymentRequest(data: DataType<any>, key: string): Promise<string | null>;
    /**
     * Create HMAC signature from JSON data with query string format
     */
    createSignature(secretKey: string, jsonData: object, options?: SignatureOptions): Promise<string>;
    /**
     * Generate a random UUIDv4 string using Node.js crypto.randomUUID
     */
    createUuidv4(): string;
}
