import { RequestOptions } from '../../core/request-options';
import { APIResource } from '../core';
export declare class Webhooks extends APIResource {
    /**
     * Validate and register a webhook URL with PayOS.
     * PayOS will test the webhook endpoint by sending a validation request to it.
     * If the webhook responds correctly, it will be registered for payment notifications.
     *
     * @param {string} webhookUrl - Your webhook endpoint URL that will receive payment notifications
     * @param {RequestOptions<ConfirmWebhookRequest>} options Additional options.
     * @returns {Promise<ConfirmWebhookResponse>} The confirmed webhook URL result
     * @throws {PayOSError} When webhook URL is invalid or validation fails
     */
    confirm(webhookUrl: string, options?: RequestOptions<ConfirmWebhookRequest>): Promise<ConfirmWebhookResponse>;
    /**
     * Verify the webhook data sent from payOS.
     *
     * @param {Webhook} webhook The request body receive from payOS.
     * @returns {Promise<WebhookData>} The verified webhook data.
     */
    verify(webhook: Webhook): Promise<WebhookData>;
}
export type ConfirmWebhookRequest = {
    webhookUrl: string;
};
export type ConfirmWebhookResponse = {
    webhookUrl: string;
    accountName: string;
    accountNumber: string;
    name: string;
    shortName: string;
};
export type Webhook = {
    code: string;
    desc: string;
    success: boolean;
    data: WebhookData;
    signature: string;
};
export type WebhookData = {
    orderCode: number;
    amount: number;
    description: string;
    accountNumber: string;
    reference: string;
    transactionDateTime: string;
    currency: string;
    paymentLinkId: string;
    code: string;
    desc: string;
    counterAccountBankId?: string | null;
    counterAccountBankName?: string | null;
    counterAccountName?: string | null;
    counterAccountNumber?: string | null;
    virtualAccountName?: string | null;
    virtualAccountNumber?: string | null;
};
