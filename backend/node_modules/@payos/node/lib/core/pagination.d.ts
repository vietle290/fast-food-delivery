import { PayOS } from '../client';
import { APIResponse } from './api-response';
import { FinalRequestOptions } from './request-options';
export interface ListParams {
    limit?: number;
    offset?: number;
    [key: string]: any;
}
/**
 * Abstract base class for paginated API responses.
 * Provides both async iteration and manual pagination methods.
 */
export declare abstract class Page<Item> implements AsyncIterable<Item> {
    protected _client: PayOS;
    protected _data: Item[];
    protected _pagination: Pagination;
    protected _options: FinalRequestOptions<any>;
    constructor(client: PayOS, data: any, options: FinalRequestOptions<any>);
    /**
     * The items in the current page
     */
    get data(): Item[];
    /**
     * Pagination information for the current page
     */
    get pagination(): Pagination;
    /**
     * Check if there are more pages available
     */
    hasNextPage(): boolean;
    /**
     * Get the next page of results
     */
    getNextPage(): Promise<this>;
    /**
     * Check if there are previous pages available
     */
    hasPreviousPage(): boolean;
    /**
     * Get the previous page of results
     */
    getPreviousPage(): Promise<this>;
    /**
     * Abstract method to create a new page instance
     * Must be implemented by subclasses
     */
    protected abstract createPageInstance(client: PayOS, data: any, options: FinalRequestOptions<any>): Page<Item>;
    /**
     * Async iterator implementation for automatic pagination
     */
    [Symbol.asyncIterator](): AsyncIterator<Item>;
    /**
     * Collect all items from all pages into an array
     */
    toArray(): Promise<Item[]>;
}
/**
 * Generic paginated response class that can be used for any item type
 */
export declare class GenericPage<Item> extends Page<Item> {
    protected createPageInstance(client: PayOS, data: any, options: FinalRequestOptions<any>): GenericPage<Item>;
}
export type Pagination = {
    limit: number;
    offset: number;
    total: number;
    count: number;
    hasMore: boolean;
};
export type PagResponse<T> = APIResponse<{
    pagination: Pagination;
} & Record<string, T[] | any>>;
